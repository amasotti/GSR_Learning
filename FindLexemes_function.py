# -*- coding: utf-8 -*-"""Created on Mon Nov 9 2020@author: angelaxusc"""############### find_lexemes() (probably should be in GSRlearner.py?)##############        #Function: find the right lexemes given a learning datum        #Input: a string (the learning datum), a numpy array containing the learning input, and a variable of the type Lexicon#Output: a dict containing two items of the structure {root/suffix: lexeme_tag}import GSRlearner as gsrlnimport numpy as npdef find_lexemes(datum, input_np, lexicon):    root = ''    suffix = ''    thm_C = ''    rt_lex = ''     # rt_lex initiated as a string but will be assigned a lexeme    sfx_lex = ''    # same for sfx_lex    for x in range(len(input_np)):        if datum == input_np[x, 0]:            root = input_np[x, 5]            suffix = input_np[x, 3]            if input_np[x, 2] != 'NA':                thm_C = input_np[x, 2]                    rootNc = root + thm_C    cNsuffix = thm_C + suffix        for x in lexicon.lexemeList:  # lexemeList is of type dict, so x would be the keys        lxm = lexicon.lexemeList[x]        if lxm.kind == 'root':            if rootNc == lxm.allomorphs[0][0]:                rt_lex = lxm                if rt_lex != '' and sfx_lex != '':                    break        elif lxm.kind == 'suffix':            for y in lxm.allomorphs:                if cNsuffix == y[0]:                    sfx_lex = lxm                    if rt_lex != '' and sfx_lex != '':                        break        out_ls = {"root": rt_lex.tag, "suffix": sfx_lex.tag}    return out_ls#Test:dt = 'tagisia'li = np.array([['aulia', 'aulia', 'l', 'ia', 50, 'au', 381],['tagisia', 'tagisia', 's', 'ia', 1, 'tagi', 2758]]) lxc = gsrln.Lexicon()rt1 = [['tagis', 0.4]]rt_l1 = gsrln.lexeme('tagi', rt1, 'root')lxc.add_lexeme(rt_l1)sfx1 = [['ina', 0.3], ['a', 0.3], ['sia', 0.3], ['tia', 0.2], ['fia', 0.4], ['mia', 0.3]]sfx_l1 = gsrln.lexeme('PV', sfx1, 'suffix') lxc.add_lexeme(sfx_l1)rt2 = [['apa', 0.0]]rt_l2 = gsrln.lexeme('apa', rt2, 'root')lxc.add_lexeme(rt_l2)sfx2 = [['ga', 0.0], ['taga', 0.2], ['maga', 0.3], ['faga', 0.1]]sfx_l2 = gsrln.lexeme('-aga', sfx2, 'suffix')lxc.add_lexeme(sfx_l2)test1 = find_lexemes(dt, li, lxc)for x in test1:    print(test1[x])#Issue solved:    #Warning:#Reloaded modules: Constraints, GSRlearner    #Solved "Reloaded modules" by: Preference > Python interpreter > uncheck "Enable UMR"